/*
This file was generated by https://github.com/pmndrs/gltfjsx and then
customized manually. It uses drei's new useAnimations hook which extracts
all actions and sets up a THREE.AnimationMixer for it so that you don't have to.
All of the assets actions, action-names and clips are available in its output. 
*/

import React, { useEffect, useState } from "react"


import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'

import { useLoader } from '@react-three/fiber'



export default function Model(color) {
    // Fetch model and a separate texture

    const isSSR = typeof window === "undefined"

    const loader = GLTFLoader

    const [colorSet, setColorSet] = useState(color)

    useEffect(() => {
        if (color.color !== colorSet) {
            setColorSet(color.color)
        }

    }, [color])

    var url = ''

    if (colorSet === 'black') {
        url = '/warda_black.glb'
    } else {
        url = '/warda_white.glb'
    }


    if (!isSSR) {

        const { scene } = useLoader(loader, url)


        return (
            <group dispose={null}>
                <primitive scale="1.2" object={scene} ></primitive>
            </group >
        )
    } else {
        return (<></>)
    }
}
